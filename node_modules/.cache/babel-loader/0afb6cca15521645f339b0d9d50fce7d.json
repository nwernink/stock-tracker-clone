{"ast":null,"code":"import _classCallCheck from \"/Users/nicholaswernink/Desktop/robinhood-app-wernink-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicholaswernink/Desktop/robinhood-app-wernink-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicholaswernink/Desktop/robinhood-app-wernink-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicholaswernink/Desktop/robinhood-app-wernink-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicholaswernink/Desktop/robinhood-app-wernink-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicholaswernink/Desktop/robinhood-app-wernink-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Stocks from './components/stocks';\nvar numTickers = 5;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tickers: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Stocks, {\n        tickers: this.state.tickers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // fetch data from the api every millesecond\n      setInterval(function () {\n        fetch('http://localhost:9000/testAPI').then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          _this2.setState({\n            tickers: data\n          });\n        }).catch(console.log);\n      }, 1); // update data in the api every second\n\n      var _loop = function _loop(i) {\n        setInterval(function () {\n          fetch(\"http://localhost:9000/testAPI/\".concat(i), {\n            method: 'PUT'\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log('error', error);\n          });\n        }, 1000);\n      };\n\n      for (var i = 1; i < numTickers + 1; i++) {\n        _loop(i);\n      } // setInterval(() => {\n      //     fetch(\"http://localhost:9000/testAPI/2\", {method: 'PUT'})\n      //     .then(response => response.text())\n      //     .then(result => console.log(result))\n      //     .catch(error => console.log('error', error));\n      // }, 1000)\n      // setInterval(() => {\n      //     fetch(\"http://localhost:9000/testAPI/3\", {method: 'PUT'})\n      //     .then(response => response.text())\n      //     .then(result => console.log(result))\n      //     .catch(error => console.log('error', error));\n      // }, 1000)\n      // setInterval(() => {\n      //     fetch(\"http://localhost:9000/testAPI/4\", {method: 'PUT'})\n      //     .then(response => response.text())\n      //     .then(result => console.log(result))\n      //     .catch(error => console.log('error', error));\n      // }, 1000)\n      // setInterval(() => {\n      //     fetch(\"http://localhost:9000/testAPI/5\", {method: 'PUT'})\n      //     .then(response => response.text())\n      //     .then(result => console.log(result))\n      //     .catch(error => console.log('error', error));\n      // }, 1000)\n\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nicholaswernink/Desktop/robinhood-app-wernink-app/src/App.js"],"names":["React","Component","Stocks","numTickers","App","state","tickers","setInterval","fetch","then","res","json","data","setState","catch","console","log","i","method","response","text","result","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,IAAMC,UAAU,GAAG,CAAnB;;IAEMC,G;;;;;;;;;;;;;;;;;UAOFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE;AADL,K;;;;;;6BANC;AACL,aACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;wCAMmB;AAAA;;AAChB;AACAC,MAAAA,WAAW,CAAC,YAAM;AAACC,QAAAA,KAAK,CAAC,+BAAD,CAAL,CACdC,IADc,CACT,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SADM,EAEdF,IAFc,CAET,UAACG,IAAD,EAAU;AACZ,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEP,YAAAA,OAAO,EAAEM;AAAX,WAAd;AACH,SAJc,EAKdE,KALc,CAKRC,OAAO,CAACC,GALA;AAKK,OALb,EAKe,CALf,CAAX,CAFgB,CAShB;;AATgB,iCAUPC,CAVO;AAWZV,QAAAA,WAAW,CAAC,YAAM;AACdC,UAAAA,KAAK,yCAAkCS,CAAlC,GAAuC;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAvC,CAAL,CACCT,IADD,CACM,UAAAU,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WADd,EAECX,IAFD,CAEM,UAAAY,MAAM;AAAA,mBAAIN,OAAO,CAACC,GAAR,CAAYK,MAAZ,CAAJ;AAAA,WAFZ,EAGCP,KAHD,CAGO,UAAAQ,KAAK;AAAA,mBAAIP,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,KAArB,CAAJ;AAAA,WAHZ;AAIH,SALU,EAKR,IALQ,CAAX;AAXY;;AAUhB,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,UAAU,GAAG,CAAjC,EAAoCc,CAAC,EAArC,EAAwC;AAAA,cAA/BA,CAA+B;AAOvC,OAjBe,CAmBhB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACH;;;;EAzDahB,S;;AA4DlB,eAAeG,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Stocks from './components/stocks';\nconst numTickers = 5;\n\nclass App extends Component {\n    render() {\n        return (\n            <Stocks tickers={this.state.tickers} />\n        )\n    }\n\n    state = {\n        tickers: []\n    };\n    \n    componentDidMount() {\n        // fetch data from the api every millesecond\n        setInterval(() => {fetch('http://localhost:9000/testAPI')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ tickers: data })\n            })\n            .catch(console.log)}, 1);\n        \n        // update data in the api every second\n        for (let i = 1; i < numTickers + 1; i++){\n            setInterval(() => {\n                fetch(`http://localhost:9000/testAPI/${i}`, {method: 'PUT'})\n                .then(response => response.text())\n                .then(result => console.log(result))\n                .catch(error => console.log('error', error));\n            }, 1000)\n        }\n\n        // setInterval(() => {\n        //     fetch(\"http://localhost:9000/testAPI/2\", {method: 'PUT'})\n        //     .then(response => response.text())\n        //     .then(result => console.log(result))\n        //     .catch(error => console.log('error', error));\n        // }, 1000)\n\n        // setInterval(() => {\n        //     fetch(\"http://localhost:9000/testAPI/3\", {method: 'PUT'})\n        //     .then(response => response.text())\n        //     .then(result => console.log(result))\n        //     .catch(error => console.log('error', error));\n        // }, 1000)\n        \n        // setInterval(() => {\n        //     fetch(\"http://localhost:9000/testAPI/4\", {method: 'PUT'})\n        //     .then(response => response.text())\n        //     .then(result => console.log(result))\n        //     .catch(error => console.log('error', error));\n        // }, 1000)\n\n        // setInterval(() => {\n        //     fetch(\"http://localhost:9000/testAPI/5\", {method: 'PUT'})\n        //     .then(response => response.text())\n        //     .then(result => console.log(result))\n        //     .catch(error => console.log('error', error));\n        // }, 1000)\n    };\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}